-- VioletCheatUI Library
local VioletCheatUI = {}
VioletCheatUI.__index = VioletCheatUI

-- Design-Einstellungen
local Theme = {
    Background = Color3.fromRGB(30, 30, 30),
    TitleBar = Color3.fromRGB(40, 40, 40),
    TabButton = Color3.fromRGB(50, 50, 50),
    TabContent = Color3.fromRGB(35, 35, 35),
    Button = Color3.fromRGB(60, 60, 60),
    ButtonHover = Color3.fromRGB(70, 70, 70),
    Text = Color3.fromRGB(255, 255, 255),
    TextHover = Color3.fromRGB(200, 200, 200),
}

-- Erstellt ein neues Fenster
function VioletCheatUI:CreateWindow(name)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 350, 0, 450)
    MainFrame.Position = UDim2.new(0.5, -175, 0.5, -225)
    MainFrame.BackgroundColor3 = Theme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Parent = ScreenGui

    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.BackgroundColor3 = Theme.TitleBar
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame

    local Title = Instance.new("TextLabel")
    Title.Text = name
    Title.Size = UDim2.new(1, 0, 1, 0)
    Title.BackgroundTransparency = 1
    Title.TextColor3 = Theme.Text
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 18
    Title.Parent = TitleBar

    -- Drag-and-Drop Funktion
    local dragging = false
    local dragInput, dragStart, startPos

    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Tabs
    local TabButtons = {}
    local TabFrames = {}

    function VioletCheatUI:CreateTab(name)
        local TabButton = Instance.new("TextButton")
        TabButton.Text = name
        TabButton.Size = UDim2.new(0.3, 0, 0, 35)
        TabButton.Position = UDim2.new(0.3 * (#TabButtons), 0, 0, 40)
        TabButton.BackgroundColor3 = Theme.TabButton
        TabButton.TextColor3 = Theme.Text
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextSize = 14
        TabButton.Parent = MainFrame

        local TabFrame = Instance.new("Frame")
        TabFrame.Size = UDim2.new(1, 0, 1, -75)
        TabFrame.Position = UDim2.new(0, 0, 0, 75)
        TabFrame.BackgroundColor3 = Theme.TabContent
        TabFrame.Visible = false
        TabFrame.Parent = MainFrame

        TabButton.MouseButton1Click:Connect(function()
            for _, frame in pairs(TabFrames) do
                frame.Visible = false
            end
            TabFrame.Visible = true
        end)

        table.insert(TabButtons, TabButton)
        table.insert(TabFrames, TabFrame)

        return TabFrame
    end

    -- Standard-Tab Ã¶ffnen
    if #TabFrames > 0 then
        TabFrames[1].Visible = true
    end

    return setmetatable({
        ScreenGui = ScreenGui,
        MainFrame = MainFrame,
        Tabs = TabFrames,
    }, VioletCheatUI)
end

-- Erstellt einen Button
function VioletCheatUI:CreateButton(parent, text, callback)
    local Button = Instance.new("TextButton")
    Button.Text = text
    Button.Size = UDim2.new(0.9, 0, 0, 35)
    Button.Position = UDim2.new(0.05, 0, 0, 0)
    Button.BackgroundColor3 = Theme.Button
    Button.TextColor3 = Theme.Text
    Button.Font = Enum.Font.Gotham
    Button.TextSize = 14
    Button.Parent = parent

    -- Hover-Effekt
    Button.MouseEnter:Connect(function()
        Button.BackgroundColor3 = Theme.ButtonHover
        Button.TextColor3 = Theme.TextHover
    end)

    Button.MouseLeave:Connect(function()
        Button.BackgroundColor3 = Theme.Button
        Button.TextColor3 = Theme.Text
    end)

    Button.MouseButton1Click:Connect(callback)
    return Button
end

-- Erstellt einen Slider
function VioletCheatUI:CreateSlider(parent, text, min, max, default, callback)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Size = UDim2.new(0.9, 0, 0, 60)
    SliderFrame.Position = UDim2.new(0.05, 0, 0, 0)
    SliderFrame.BackgroundTransparency = 1
    SliderFrame.Parent = parent

    local SliderLabel = Instance.new("TextLabel")
    SliderLabel.Text = text .. ": " .. default
    SliderLabel.Size = UDim2.new(1, 0, 0, 20)
    SliderLabel.BackgroundTransparency = 1
    SliderLabel.TextColor3 = Theme.Text
    SliderLabel.Font = Enum.Font.Gotham
    SliderLabel.TextSize = 14
    SliderLabel.Parent = SliderFrame

    local Slider = Instance.new("TextBox")
    Slider.PlaceholderText = "Enter value"
    Slider.Size = UDim2.new(1, 0, 0, 30)
    Slider.Position = UDim2.new(0, 0, 0, 25)
    Slider.BackgroundColor3 = Theme.Button
    Slider.TextColor3 = Theme.Text
    Slider.Font = Enum.Font.Gotham
    Slider.TextSize = 14
    Slider.Parent = SliderFrame

    Slider.FocusLost:Connect(function()
        local value = tonumber(Slider.Text)
        if value and value >= min and value <= max then
            SliderLabel.Text = text .. ": " .. value
            callback(value)
        else
            Slider.Text = ""
        end
    end)

    return SliderFrame
end

return VioletCheatUI
